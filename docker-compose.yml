version: '3'

services:
  fergie_app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fergie_app-container
    ports:
      - '5010:5007'
      - '5011:5008'
    restart: unless-stopped
    depends_on:
      - redis
      - zookeeper
      - kafka
    networks:
      - my_network

  redis:
    image: redis/redis-stack-server:latest
    container_name: redis-stack-server-container
    ports:
      - '6379:6379'
      # - '127.0.0.1:6379:6379'
    restart: always
    volumes:
      - redis-data:/data
    networks:
      - my_network

  prom-server:
    image: prom/prometheus
    container_name: prom-server-container
    ports:
      - 9090:9090
    volumes:
      - prometheus-data:/prometheus
      - ./prometheus-config.yml:/etc/prometheus/prometheus.yml
  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper-container
    ports:
      - '2181:2181'
      # - '127.0.0.1:2181:2181'
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
      - ZOOKEEPER_SYNC_LIMIT=2
      - ZOOKEEPER_INIT_LIMIT=5
    restart: always
    volumes:
      - zookeeper-data:/data
    networks:
      - my_network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-container
    ports:
      - '9092:9092'
      # - '127.0.0.1:9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - my_network
    restart: always

networks:
  my_network:
    driver: bridge

volumes:
  redis-data:
  prometheus-data:
  zookeeper-data:
  kafka-data:
